//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyConverterWebApp.C2F {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="C2F.TemperatureConverterSoap")]
    public interface TemperatureConverterSoap {
        
        // CODEGEN: Generating message contract since element name YourName from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        MyConverterWebApp.C2F.HelloWorldResponse HelloWorld(MyConverterWebApp.C2F.HelloWorldRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<MyConverterWebApp.C2F.HelloWorldResponse> HelloWorldAsync(MyConverterWebApp.C2F.HelloWorldRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CelsiusToFahrenheit", ReplyAction="*")]
        double CelsiusToFahrenheit(double celsius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CelsiusToFahrenheit", ReplyAction="*")]
        System.Threading.Tasks.Task<double> CelsiusToFahrenheitAsync(double celsius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FahrenheitToCelsius", ReplyAction="*")]
        double FahrenheitToCelsius(double Fahrenheit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FahrenheitToCelsius", ReplyAction="*")]
        System.Threading.Tasks.Task<double> FahrenheitToCelsiusAsync(double Fahrenheit);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class HelloWorldRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="HelloWorld", Namespace="http://tempuri.org/", Order=0)]
        public MyConverterWebApp.C2F.HelloWorldRequestBody Body;
        
        public HelloWorldRequest() {
        }
        
        public HelloWorldRequest(MyConverterWebApp.C2F.HelloWorldRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class HelloWorldRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string YourName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int Age;
        
        public HelloWorldRequestBody() {
        }
        
        public HelloWorldRequestBody(string YourName, int Age) {
            this.YourName = YourName;
            this.Age = Age;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class HelloWorldResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="HelloWorldResponse", Namespace="http://tempuri.org/", Order=0)]
        public MyConverterWebApp.C2F.HelloWorldResponseBody Body;
        
        public HelloWorldResponse() {
        }
        
        public HelloWorldResponse(MyConverterWebApp.C2F.HelloWorldResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class HelloWorldResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string HelloWorldResult;
        
        public HelloWorldResponseBody() {
        }
        
        public HelloWorldResponseBody(string HelloWorldResult) {
            this.HelloWorldResult = HelloWorldResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TemperatureConverterSoapChannel : MyConverterWebApp.C2F.TemperatureConverterSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TemperatureConverterSoapClient : System.ServiceModel.ClientBase<MyConverterWebApp.C2F.TemperatureConverterSoap>, MyConverterWebApp.C2F.TemperatureConverterSoap {
        
        public TemperatureConverterSoapClient() {
        }
        
        public TemperatureConverterSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TemperatureConverterSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TemperatureConverterSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TemperatureConverterSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MyConverterWebApp.C2F.HelloWorldResponse MyConverterWebApp.C2F.TemperatureConverterSoap.HelloWorld(MyConverterWebApp.C2F.HelloWorldRequest request) {
            return base.Channel.HelloWorld(request);
        }
        
        public string HelloWorld(string YourName, int Age) {
            MyConverterWebApp.C2F.HelloWorldRequest inValue = new MyConverterWebApp.C2F.HelloWorldRequest();
            inValue.Body = new MyConverterWebApp.C2F.HelloWorldRequestBody();
            inValue.Body.YourName = YourName;
            inValue.Body.Age = Age;
            MyConverterWebApp.C2F.HelloWorldResponse retVal = ((MyConverterWebApp.C2F.TemperatureConverterSoap)(this)).HelloWorld(inValue);
            return retVal.Body.HelloWorldResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyConverterWebApp.C2F.HelloWorldResponse> MyConverterWebApp.C2F.TemperatureConverterSoap.HelloWorldAsync(MyConverterWebApp.C2F.HelloWorldRequest request) {
            return base.Channel.HelloWorldAsync(request);
        }
        
        public System.Threading.Tasks.Task<MyConverterWebApp.C2F.HelloWorldResponse> HelloWorldAsync(string YourName, int Age) {
            MyConverterWebApp.C2F.HelloWorldRequest inValue = new MyConverterWebApp.C2F.HelloWorldRequest();
            inValue.Body = new MyConverterWebApp.C2F.HelloWorldRequestBody();
            inValue.Body.YourName = YourName;
            inValue.Body.Age = Age;
            return ((MyConverterWebApp.C2F.TemperatureConverterSoap)(this)).HelloWorldAsync(inValue);
        }
        
        public double CelsiusToFahrenheit(double celsius) {
            return base.Channel.CelsiusToFahrenheit(celsius);
        }
        
        public System.Threading.Tasks.Task<double> CelsiusToFahrenheitAsync(double celsius) {
            return base.Channel.CelsiusToFahrenheitAsync(celsius);
        }
        
        public double FahrenheitToCelsius(double Fahrenheit) {
            return base.Channel.FahrenheitToCelsius(Fahrenheit);
        }
        
        public System.Threading.Tasks.Task<double> FahrenheitToCelsiusAsync(double Fahrenheit) {
            return base.Channel.FahrenheitToCelsiusAsync(Fahrenheit);
        }
    }
}
